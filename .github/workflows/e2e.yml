name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.5

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Install redis-tools
      run: sudo apt-get update && sudo apt-get install -y redis-tools
    
    - name: Wait for Redis
      run: |
        until redis-cli ping; do
          echo "Waiting for Redis..."
          sleep 1
        done
        echo "Redis is ready!"
    
    - name: Run E2E Tests
      run: go test -v -run TestEndToEndWithRealRedis
      env:
        REDIS_ADDR: localhost:6379

    - name: Run RDB Parsing Tests
      run: go test -v -run TestRDBParsingRobustness
      env:
        REDIS_ADDR: localhost:6379

    - name: Run Replication Benchmarks
      run: go test -v -bench BenchmarkReplicationThroughput -benchtime=3s
      env:
        REDIS_ADDR: localhost:6379

  e2e-with-auth:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.5

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Install redis-tools
      run: sudo apt-get update && sudo apt-get install -y redis-tools

    - name: Configure Redis with password
      run: |
        # Stop any existing Redis and start with auth using Docker
        docker stop redis-auth || true
        docker rm redis-auth || true
        docker run -d --name redis-auth -p 6379:6379 redis:latest redis-server --requirepass testpassword123
        sleep 5
    
    - name: Wait for Redis with auth
      run: |
        until redis-cli -a testpassword123 ping; do
          echo "Waiting for Redis with auth..."
          sleep 1
        done
        echo "Redis with auth is ready!"
    
    - name: Run E2E Tests with Authentication
      run: go test -v -run TestEndToEndWithRealRedis
      env:
        REDIS_ADDR: localhost:6379
        REDIS_PASSWORD: testpassword123